

C++
---------------------------------------------------------------------------

---------------------Brute Force Approach----------------------------------
class Solution {
public:
    string clearDigits(string s) {
        for(int i=0;i<s.size();i++)
        {
            if(s[i]-'0'>=0 && s[i]-'0'<=9)
            {
                s.erase(i,1);
                s.erase(i-1,1);
                i=i-2;
            }
        }
        return s;
    }
};
T.C-O(N*N)
S.C-O(1)

---------------------Better Approach----------------------------------
class Solution {
public:
    string clearDigits(string s) {
        stack<char>st;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]-'0'>=0 && s[i]-'0'<=9 && !st.empty())
            st.pop();
            else
            st.push(s[i]);
        }
        s.clear();
        while(!st.empty())
        {
            s.push_back(st.top());
            st.pop();
        }
        reverse(s.begin(),s.end());
        return s;
    }
};
T.C-O(N)
S.C-O(N)
---------------------Optimized Approach----------------------------------
class Solution {
public:
    string clearDigits(string s) {
        string str="";
        for(int i=0;i<s.size();i++)
        {
            if(s[i]-'0'>=0 && s[i]-'0'<=9 && !str.empty())
            str.pop_back();
            else
            str.push_back(s[i]);
        }
        return str;
    }
};
T.C-O(N)
S.C-O(1)
------------------------------------------------------------------------
